# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/
image: gcc

build:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  before_script:
     - apt update && apt -y install cmake make
     # install waves-c
     - rm -rf src/waves-c
     - mkdir -p src/waves-c
     - cd src/waves-c
     - git clone https://git@github.com/qbcir/waves-c.git .
     - cmake -DCMAKE_BUILD_TYPE=Debug .
     - make -j4
     - make package
     - dpkg -i waves-c-*.deb
  tags:
    - shell
  script:
    - cmake .
    - make -j4
  artifacts:
    paths:
      - libwavespp.so
      - libwavespp.a
      - test_base58
      
      # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
      # cache:
      #   paths:
      #     - "*.o"

# run tests using the binary built before
test:
  stage: test
  tags:
    - shell
  script:
    - make test